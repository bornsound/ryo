name: Build Ry1113

on:
  push:
    branches: [ dev3 ]
  pull_request:
    branches: [ dev3 ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    env:
      MACOSX_DEPLOYMENT_TARGET: 10.15
      BOOST_ROOT: $HOME/boost-1.75
      BOOST_LIBRARYDIR: $HOME/boost-1.75/lib
      OPENSSL_ROOT_DIR: $HOME/openssl-1.1.1
      CMAKE_PREFIX_PATH: $HOME/boost-1.75:$HOME/openssl-1.1.1:/usr/local
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig
      READLINE_ROOT: /usr/local/opt/readline

    steps:
      - name: Set up Xcode 14.1
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.1'

      - name: Select Xcode CLI
        run: sudo xcode-select -s /Applications/Xcode_14.1.app/Contents/Developer

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: dev3
          submodules: recursive

      - name: Install Homebrew dependencies
        run: |
          brew update
          brew install pkg-config unbound libsodium miniupnpc hidapi xz readline expat libunwind-headers libpgm doxygen graphviz blake3 fmt hiredis xxhash ccache

      - name: Install OpenSSL 1.1.1
        run: |
          curl -L https://www.openssl.org/source/openssl-1.1.1w.tar.gz -o openssl.tar.gz
          tar -xzf openssl.tar.gz
          cd openssl-1.1.1w
          ./config --prefix=$HOME/openssl-1.1.1 --openssldir=$HOME/openssl-1.1.1 no-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      - name: Install CMake 3.31.6
        run: |
          brew uninstall cmake || true
          curl -L https://github.com/Kitware/CMake/releases/download/v3.31.6/cmake-3.31.6.tar.gz -o cmake.tar.gz
          tar -xzf cmake.tar.gz
          cd cmake-3.31.6
          ./bootstrap && make -j$(sysctl -n hw.ncpu) && sudo make install

      - name: Install macOS 10.15 SDK
        run: |
          curl -L -o sdk.tar.xz https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.15.sdk.tar.xz
          sudo tar -xf sdk.tar.xz -C /Applications/Xcode_14.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
          echo "SDK_PATH=/Applications/Xcode_14.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk" >> $GITHUB_ENV

      - name: Build and install ZeroMQ 4.3.5 (static)
        run: |
          curl -L https://github.com/zeromq/libzmq/releases/download/v4.3.5/zeromq-4.3.5.tar.gz -o zeromq-4.3.5.tar.gz
          tar -xzf zeromq-4.3.5.tar.gz
          cd zeromq-4.3.5
          sed -i '' '/#define CLOCK_REALTIME 0/d' src/clock.hpp || true
          ./configure --prefix=/usr/local --enable-static --disable-shared --disable-tipc \
            CC=clang CXX=clang++ \
            CFLAGS="-Wno-error -Wno-error=packed-not-aligned" \
            CXXFLAGS="-std=gnu++14 -Wno-error -Wno-error=packed-not-aligned"
          make -j$(sysctl -n hw.ncpu)
          sudo make install

      - name: Install cppzmq headers
        run: |
          git clone --branch v4.9.0 https://github.com/zeromq/cppzmq.git
          sudo cp cppzmq/zmq.hpp /usr/local/include/

      - name: Install Boost 1.75 static
        run: |
          curl -L https://archives.boost.io/release/1.75.0/source/boost_1_75_0.tar.gz -o boost.tar.gz
          tar -xzf boost.tar.gz
          cd boost_1_75_0
          ./bootstrap.sh --prefix=$HOME/boost-1.75 --with-toolset=clang
          ./b2 -j$(sysctl -n hw.ncpu) link=static runtime-link=static install

      - name: Install Clang 7.0.0
        run: |
          curl -L https://releases.llvm.org/7.0.0/clang+llvm-7.0.0-x86_64-apple-darwin.tar.xz -o clang7.tar.xz
          tar -xf clang7.tar.xz
          CLANG_DIR=$(find . -type d -name "clang+llvm-7.0.0-x86_64-apple-darwin" | head -n1)
          echo "$CLANG_DIR/bin" >> $GITHUB_PATH
          echo "CLANG_DIR=$CLANG_DIR" >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          mkdir -p build && cd build
          export CC=$CLANG_DIR/bin/clang
          export CXX=$CLANG_DIR/bin/clang++
          export CXXFLAGS="-mmacosx-version-min=10.15 -isysroot ${{ env.SDK_PATH }} -std=gnu++14"
          export CFLAGS="-mmacosx-version-min=10.15 -isysroot ${{ env.SDK_PATH }}"
          /usr/local/bin/cmake .. \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 \
            -DCMAKE_OSX_SYSROOT="${{ env.SDK_PATH }}" \
            -DOPENSSL_ROOT_DIR=$OPENSSL_ROOT_DIR \
            -DOPENSSL_INCLUDE_DIR=$OPENSSL_ROOT_DIR/include \
            -DOPENSSL_CRYPTO_LIBRARY=$OPENSSL_ROOT_DIR/lib/libcrypto.a \
            -DOPENSSL_SSL_LIBRARY=$OPENSSL_ROOT_DIR/lib/libssl.a \
            -DZMQ_INCLUDE_DIR=/usr/local/include \
            -DZMQ_LIBRARY=/usr/local/lib/libzmq.a \
            -DCPPZMQ_INCLUDE_DIR=/usr/local/include \
            -DBoost_USE_STATIC_LIBS=ON \
            -DBoost_USE_STATIC_RUNTIME=ON \
            -DBoost_NO_SYSTEM_PATHS=ON \
            -DBoost_ROOT=$BOOST_ROOT \
            -DBOOST_LIBRARYDIR=$BOOST_LIBRARYDIR \
            -DCMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH \
            -DCMAKE_BUILD_TYPE=Release \
            -DSTATIC=ON \
            -DUSE_SINGLE_BUILDDIR=1 \
            -DARCH=x86-64 \
            -DCMAKE_POLICY_DEFAULT_CMP0057=NEW \
            -DCMAKE_POLICY_DEFAULT_CMP0167=NEW \
            -DCMAKE_EXE_LINKER_FLAGS="-framework CoreFoundation -framework IOKit -ldispatch"

      - name: Build Ryo
        run: |
          cd build
          make -j$(sysctl -n hw.ncpu)

      - name: Run tests
        run: |
          cd build
          make release-test
        continue-on-error: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryo-binaries-clang7
          path: build/release/bin/
