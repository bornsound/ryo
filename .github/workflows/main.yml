name: Build Ryo Currency

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13 # macOS Ventura, x86_64 architecture
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev
          submodules: recursive

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/openssl-1.1.1
            ~/boost-1.75
            ~/cmake-3.4.2
          key: ${{ runner.os }}-deps-${{ hashFiles('**/*.yml') }}
          restore-keys: ${{ runner.os }}-deps-

      - name: Install CMake 3.4.2
        run: |
          curl -L https://github.com/Kitware/CMake/releases/download/v3.4.2/cmake-3.4.2.tar.gz -o cmake-3.4.2.tar.gz
          tar -xzf cmake-3.4.2.tar.gz
          cd cmake-3.4.2
          ./configure --prefix=$HOME/cmake-3.4.2 CC=/usr/local/bin/gcc-10 CXX=/usr/local/bin/g++-10
          make -j$(sysctl -n hw.ncpu)
          make install
          echo "$HOME/cmake-3.4.2/bin" >> $GITHUB_PATH
          cd ..
          # Verify CMake version
          cmake --version

      - name: Install Homebrew dependencies
        run: |
          brew install --formula pkg-config unbound libsodium miniupnpc zmq hidapi xz readline expat libunwind-headers libpgm doxygen graphviz ccache
          # Verify libunbound is installed
          ls -l /usr/local/lib/libunbound*

      - name: Install GCC 10
        run: |
          brew install gcc@10
          echo "CC=/usr/local/bin/gcc-10" >> $GITHUB_ENV
          echo "CXX=/usr/local/bin/g++-10" >> $GITHUB_ENV

      - name: Build and install OpenSSL 1.1.1 (static)
        run: |
          curl -L https://www.openssl.org/source/openssl-1.1.1w.tar.gz -o openssl-1.1.1w.tar.gz
          tar -xzf openssl-1.1.1w.tar.gz
          cd openssl-1.1.1w
          ./Configure darwin64-x86_64-cc no-shared --prefix=$HOME/openssl-1.1.1 CC=/usr/local/bin/gcc-10
          make depend
          make -j$(sysctl -n hw.ncpu)
          make install
          cd ..
          # Verify static libraries
          ls -l $HOME/openssl-1.1.1/lib/lib*.a
          echo "OPENSSL_ROOT_DIR=$HOME/openssl-1.1.1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$HOME/openssl-1.1.1/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Build and install Boost 1.75 (static)
        run: |
          curl -L https://archives.boost.io/release/1.75.0/source/boost_1_75_0.tar.gz -o boost_1_75_0.tar.gz
          tar -xzf boost_1_75_0.tar.gz
          cd boost_1_75_0
          ./bootstrap.sh --prefix=$HOME/boost-1.75
          ./b2 -j$(sysctl -n hw.ncpu) --without-python cxxflags="-std=c++11" link=static install
          cd ..
          echo "BOOST_ROOT=$HOME/boost-1.75" >> $GITHUB_ENV
          echo "BOOST_INCLUDEDIR=$HOME/boost-1.75/include" >> $GITHUB_ENV
          echo "BOOST_LIBRARYDIR=$HOME/boost-1.75/lib" >> $GITHUB_ENV

      - name: Create build directory
        run: mkdir build && cd build

      - name: Configure CMake for static build
        run: |
          cd build
          cmake .. \
            -DCMAKE_C_COMPILER=/usr/local/bin/gcc-10 \
            -DCMAKE_CXX_COMPILER=/usr/local/bin/g++-10 \
            -DOPENSSL_ROOT_DIR=$HOME/openssl-1.1.1 \
            -DBOOST_ROOT=$HOME/boost-1.75 \
            -DBOOST_INCLUDEDIR=$HOME/boost-1.75/include \
            -DBOOST_LIBRARYDIR=$HOME/boost-1.75/lib \
            -DBoost_NO_BOOST_CMAKE=TRUE \
            -DUNBOUND_INCLUDE_DIR=/usr/local/include \
            -DUNBOUND_LIBRARY=/usr/local/lib/libunbound.a \
            -DCMAKE_BUILD_TYPE=Release \
            -DSTATIC=ON \
            -DUSE_SINGLE_BUILDDIR=1 \
            -DARCH=x86_64 \
            -DBUILD_64=ON

      - name: Build Ryo (release-static-mac-x86_64)
        run: |
          cd build
          make release-static-mac-x86_64 -j$(sysctl -n hw.ncpu)

      - name: Run tests (optional)
        run: |
          cd build
          make release-test
        continue-on-error: true # Tests may fail on dev branch

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryo-binaries
          path: build/release/bin/
